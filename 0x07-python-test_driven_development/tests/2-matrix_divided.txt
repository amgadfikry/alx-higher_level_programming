test cases for function that divides all elements
of matrix with specific number
-------------------------------------------------

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

------------
normal cases
------------

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [[0, 2, 3], [4, 0, 6]]
>>> matrix_divided(matrix, 3)
[[0.0, 0.67, 1.0], [1.33, 0.0, 2.0]]

>>> matrix = [[-1, 2, 3], [-4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[-0.33, 0.67, 1.0], [-1.33, 1.67, 2.0]]

>>> matrix = [[-1, 2, 3], [-4, 5, 6]]
>>> matrix_divided(matrix, -3)
[[0.33, -0.67, -1.0], [1.33, -1.67, -2.0]]

>>> matrix = [[4.5], [10.5]]
>>> matrix_divided(matrix, 3.5)
[[1.29], [3.0]]

>>> matrix = [[3, 6], [9, 12], [15, 18], [21, 24]]
>>> matrix_divided(matrix, 3)
[[1.0, 2.0], [3.0, 4.0], [5.0, 6.0], [7.0, 8.0]]

---------------
matrix not list
---------------

>>> matrix = 67
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = (3, 3, 3)
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

-----------------------
matrix not contain list
-----------------------

>>> matrix = [[1, 2, 3], "hghj", 111]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

---------------------------------
not int or float values in matrix
---------------------------------

>>> matrix = [[1, "y", 3.6], [4, 5, "gg"]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

--------------------------
matrix row not same length
--------------------------

>>> matrix = [[1, 2, 3, 7], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3, 7], [4, 5, 6, 4, 5]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

------------------
div not equal to 0
------------------

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

--------------------
div not int or float
--------------------

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "jj")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, "9")
Traceback (most recent call last):
TypeError: div must be a number

----------
empty args
----------

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided(3)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[2, 3], [4, 5]], )
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
